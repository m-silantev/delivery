rootProject.name = 'delivery'
include(':api')
include(':core')
include(':infrastructure')
include(':starter')

dependencyResolutionManagement {
    versionCatalogs {
        libs {
            // versions
            version('spring-boot-version', '3.3.5')
            version('spring-jdbc-version', '6.1.14')
            version('mapstruct-version', '1.6.2')
            version('postgres-driver-version', '42.7.4')
            version('liquibase-version', '4.29.2')
            version('lombok-version', '8.10.2')
            version('testcontainers-version', '1.20.3')
            version('result4j-version', '1.0')
            version('pipelinr-version', '0.9')

            // libraries
            library('spring-boot-starter-data-jdbc', 'org.springframework.boot', 'spring-boot-starter-data-jdbc').versionRef('spring-boot-version')
            library('spring-boot-core', 'org.springframework.boot', 'spring-boot').versionRef('spring-boot-version')
            library('spring-boot-autoconfigure', 'org.springframework.boot', 'spring-boot-autoconfigure').versionRef('spring-boot-version')
            library('mapstruct', 'org.mapstruct', 'mapstruct').versionRef('mapstruct-version')
            library('mapstruct-processor', 'org.mapstruct', 'mapstruct-processor').versionRef('mapstruct-version')
            library('postgres-driver', 'org.postgresql', 'postgresql').versionRef('postgres-driver-version')
            library('liquibase', 'org.liquibase', 'liquibase-core').versionRef('liquibase-version')
            library('result4j', 'com.github.sviperll', 'result4j').versionRef('result4j-version')
            library('pipelinr', 'net.sizovs', 'pipelinr').versionRef('pipelinr-version')

            library('spring-boot-test', 'org.springframework.boot', 'spring-boot-starter-test').versionRef('spring-boot-version')
            library('testcontainers-core', 'org.testcontainers', 'testcontainers').versionRef('testcontainers-version')
            library('testcontainers-junit', 'org.testcontainers', 'junit-jupiter').versionRef('testcontainers-version')
            library('testcontainers-postgres', 'org.testcontainers', 'postgresql').versionRef('testcontainers-version')
            bundle('testcontainers', ['testcontainers-core', 'testcontainers-junit', 'testcontainers-postgres'])


            // plugins
            plugin('spring-boot', 'org.springframework.boot').versionRef('spring-boot-version')
            plugin('lombok', 'io.freefair.lombok').versionRef('lombok-version')
        }
    }
}
